# Copyright (c) 2020 Hiroki YASUHARA
# MIT License - Look at LICENSE.txt for details.

-d:ssl
@if windows:
  --cc:gcc
  --passl:"-static -lstdc++ -lgcc -lwinpthread"
  --dynlibOverride:ssl
  -p:"$projectDir/overridestdlib"
@end

## output debug logging
## run "nimble build", add --debug option 
#--verbosity:3
#verbosity=3

@if release or danger:
  @if windows:
    @if amd64:
      --nimcache:"$projectDir/../nimcache/windows_amd64_r"
    @elif i386:
      --nimcache:"$projectDir/../nimcache/windows_i386_r"
    @else:
      --nimcache:"$projectDir/../nimcache/windows_r"
    @end
  @elif macosx:
    @if amd64:
      --nimcache:"$projectDir/../nimcache/macosx_amd64_r"
    @elif arm64:
      --nimcache:"$projectDir/../nimcache/macosx_arm64_r"
    @else:
      --nimcache:"$projectDir/../nimcache/macosx_r"
    @end
  @elif linux:
    --nimcache:"$projectDir/../nimcache/linux_r"
  @else:
    --nimcache:"$projectDir/../nimcache/release"
  @end
@else:
  @if windows:
    @if amd64:
      --nimcache:"$projectDir/../nimcache/windows_amd64_d"
    @elif i386:
      --nimcache:"$projectDir/../nimcache/windows_i386_d"
    @else:
      --nimcache:"$projectDir/../nimcache/windows_d"
    @end
  @elif macosx:
    @if amd64:
      --nimcache:"$projectDir/../nimcache/macosx_amd64_d"
    @elif arm64:
      --nimcache:"$projectDir/../nimcache/macosx_arm64_d"
    @else:
      --nimcache:"$projectDir/../nimcache/macosx_d"
    @end
  @elif linux:
    --nimcache:"$projectDir/../nimcache/linux_d"
  @else:
    --nimcache:"$projectDir/../nimcache/debug"
  @end
@end


## set outdir
## when use "nimble build", nimble setting overrides this parameter
#outDir = "$projectDir/../output"
#--outdir:"$projectDir/output"


